#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  plasground, plasbase, turret, sleeve, sleeve2, barrel, flare, f2, sp1;

static-var  Static_Var_1;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from plasbase;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	dont-shade turret;
	dont-shade sleeve;
	dont-shade sleeve2;
	dont-shade barrel;
	dont-shade plasground;
	dont-shade flare;
	dont-cache turret;
	dont-cache sleeve;
	dont-cache sleeve2;
	dont-cache barrel;
	dont-cache plasground;
	dont-cache flare;
	hide flare;
	Static_Var_1 = 0;
	start-script SmokeUnit();
	return (0);
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <120.000000>;
	turn sleeve to x-axis <0.000000> - pitch speed <80.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	return (1);
}

Shot1()
{
	emit-sfx 1024 + 0 from flare;
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = flare;
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = sp1;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = plasbase;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode plasbase type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode plasbase type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode plasbase type BITMAPONLY | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode plasbase type BITMAPONLY | BITMAP3;
	return (0);
}
