#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 180

piece  groundx2, hips, h2, wheel, head, torso,luparm,l1,l2,l3,lgun,lbarrel,lflare, ruparm,r1,r2,r3,rgun,rbarrel,rflare, eye1,eye2,eye3, lspike,rspike;

static-var  bMoving, bAiming, Static_Var_3, Static_Var_4, restore_delay, gun_1;

// Signal definitions
#define SIG_AIM				2



walk()
{
	turn hips to x-axis <5.000000> speed <10.000000>;
	spin wheel around x-axis speed <160.000000> accelerate <10.000000>;
	sleep 100;
	return (0);
}

walklegs()
{
	turn hips to x-axis <0.000000> speed <10.000000>;
	spin wheel around x-axis speed <160.000000> accelerate <10.000000>;
	sleep 100;
	return (0);
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	while( TRUE )
	{
		justmoved = TRUE;
		while( TRUE )
		{
			moving = bMoving;
			aiming = bAiming;
			if( moving )
			{
				if( aiming )
				{
					Static_Var_3 = 1;
					call-script walklegs();
				}
				if( !aiming )
				{
					Static_Var_3 = 0;
					call-script walk();
				}
				justmoved = TRUE;
			}
			if( !moving )
			{
				Static_Var_3 = 1;
				if( justmoved )
				{
					turn hips to x-axis <0.000000> speed <10.000000>;
					stop-spin wheel around x-axis decelerate <30.000000>;
					if( !aiming )
					{
						turn torso to y-axis <0.000000> speed <90.016484>;
						turn luparm to x-axis <0.000000> speed <100.038462>;
						turn ruparm to x-axis <0.000000> speed <100.038462>;
					}
					justmoved = FALSE;
				}
				sleep 100;
			}
		}
	}
}

Create()
{
	
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	gun_1=[0];
	restore_delay = 4000;
	start-script MotionControl();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.016484>;
	turn luparm to x-axis <0.000000> speed <100.005495>;
	turn ruparm to x-axis <0.000000> speed <100.005495>;
	bAiming = FALSE;
}


AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	turn torso to y-axis heading speed <100.027473>;
	turn ruparm to x-axis <0.000000> - pitch speed <100.038462>;
	turn luparm to x-axis <0.000000> - pitch speed <100.038462>;
	
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}


FirePrimary()
{
	if(gun_1 == [0])
	{
		move lbarrel to z-axis [-7.000000] now;
		emit-sfx 1024 + 0 from lflare;
		sleep 100;
		move lbarrel to z-axis [0.000000] speed [3.000000];
		gun_1=[1];
		return 0;
	}
	if(gun_1 == [1])
	{
		move rbarrel to z-axis [-7.000000] now;
		emit-sfx 1024 + 0 from rflare;
		sleep 100;
		move rbarrel to z-axis [0.000000] speed [3.000000];
		gun_1=[0];
		return 0;
	}

}

QueryPrimary(piecenum)
{
	if(gun_1 == [0])
	{
		piecenum = lflare;
		return 0;
	}
	if(gun_1 == [1])
	{
		piecenum = rflare;
		return 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode luparm type BITMAPONLY | BITMAP2;
	
		explode h2 type BITMAPONLY | BITMAP2;
		explode ruparm type BITMAPONLY | BITMAP4;
	
		explode eye3 type BITMAPONLY | BITMAP4;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode luparm type FALL | BITMAP2;
		
		explode h2 type FALL | BITMAP2;
		explode ruparm type FALL | BITMAP4;
	
		explode eye3 type FALL | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	
		explode h2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	
		explode eye3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;

	explode h2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;

	explode eye3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP5;
}
