#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"


piece ground, hips,torso,turret,sleeve,front, front2, front3, fb,flare, sphere,shieldpt;

	
static-var bMoving,bAiming;

// Signal definitions
#define SIG_AIM				2



Create()
{
	spin front2 around z-axis speed <240.000000>;
	bMoving=FALSE;
	bAiming=FALSE;
}



SweetSpot(piecenum)
{
	piecenum = sphere;
}

RestoreAfterDelayWeapon()
{
	//aim1=FALSE;
	sleep 5000;
	turn turret to y-axis <0.000000> speed <65.016484>;
	turn sleeve to x-axis <0.000000> speed <65.005495>;
	bAiming = FALSE;
}


AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

FirePrimary()
{
	emit-sfx 1024 + 0 from flare;
	return 1;
}


AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	
	//aim1=TRUE;
	turn turret to y-axis heading speed <100.027473>;
	turn sleeve to x-axis <0.000000> - pitch speed <100.038462>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelayWeapon();
	return (1);
}



QuerySecondary(piecenum)
{
	piecenum = shieldpt;
	return (0);
}

AimFromSecondary(piecenum)
{
	piecenum = shieldpt;
	return (0);
}

AimSecondary(heading, pitch)
{
	return (1);
}



Killed(severity, corpsetype)
{
	
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode sphere type SHATTER | BITMAP4;
		explode sphere type SHATTER | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode sphere type SHATTER | BITMAP4;
		explode sphere type SHATTER | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode sphere type SHATTER | BITMAP4;
		explode sphere type SHATTER | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	explode sphere type SHATTER | BITMAP4;
	explode sphere type SHATTER | BITMAP4;
		
}

