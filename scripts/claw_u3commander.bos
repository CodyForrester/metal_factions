#define TAK			// This is a TAK script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 260
#define RESTORE_DELAY	3000

piece  torso, luparm, larm, lgun, lnanospray, lhand,lh1,lh2, l1,l2,l3, ruparm, rarm, rgun, rnanospray, rg1, rflare1, r1,r2,r3, pelvis, head, pack, lthigh, rthigh, rleg, lleg, lfoot, rfoot, rtorpgun,rtorpflare, emit3, tbase;

static-var  bMoving, bBuilding, Static_Var_3, bAiming, Static_Var_5, Static_Var_6, bDgunning, bUnderwater, canAim1, canAim2, firept2, firept3, nanopt1, stanceActivated;

// signal definition
#define SIG_AIM		2


Sing()
{
	Static_Var_6 = Rand( 0, 9 );
	if( Static_Var_6 == 0 )
	{
		play-sound( "honk", 15 );
		play-sound( "honk", 15 );
		play-sound( "honk", 15 );
		play-sound( "honk", 15 );
		play-sound( "honk", 15 );
		return (0);
	}
	if( Static_Var_6 == 1 )
	{
		play-sound( "CorCom1", 15 );
		play-sound( "CorCom1", 15 );
		play-sound( "CorCom1", 15 );
		play-sound( "CorCom1", 15 );
		play-sound( "CorCom1", 15 );
		return (0);
	}
	if( Static_Var_6 > 1 AND Static_Var_6 < 10 )
	{
		play-sound( "sing", 15 );
		play-sound( "sing", 15 );
		play-sound( "sing", 15 );
		play-sound( "sing", 15 );
		play-sound( "sing", 15 );
		return (0);
	}
}




// shows nano effect while building
Build()
{
	while(TRUE)
	{
		if( bBuilding )
		{
			emit-sfx 1024 + 1 from lnanospray;
			emit-sfx 1024 + 1 from rnanospray;
		}
		sleep 100;
	}
	return;
}

checkUnderwater()
{
	var currentHeight, oldState;
	while(TRUE)
	{   
 		currentHeight = GET GROUND_WATER_HEIGHT(GET UNIT_XZ);
 		oldState = bUnderwater;
		
		// check current state
		if ( currentHeight < [-30])
 		{
 			bUnderwater = TRUE;
		
 		}
 		if (currentHeight >= [-30])
 		{
 			bUnderwater = FALSE;
 		}
 		
 		// handle state changes
 		if (oldState != bUnderwater)
 		{
			if(bUnderwater)
			{
				//hide laser stuff
				hide rg1;
 				
				//TODO show weapon morph stuff
				sleep 10;
				
				//show torpedo stuff 			
 				show rtorpgun;
 				

				sleep 200;
				canAim1 = FALSE;
 				canAim2 = TRUE;
			}
			if(!bUnderwater)
			{
				//hide torpedo stuff
 				hide rtorpgun;


				//TODO show weapon morph stuff
				sleep 10;

				//show laser stuff 			
				show rg1;
 		
 				sleep 200;	
 				canAim1 = TRUE;
 				canAim2 = FALSE;
			}
 		}
 		
 		sleep 500;
	}
	return 0;	
}


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [-1.750000] now;
		move head to y-axis [0.000000] now;
		turn pelvis to x-axis <6.692308> now;
		turn lthigh to x-axis <-41.791209> now;
		turn rthigh to x-axis <17.593407> now;
		turn torso to y-axis <4.192308> now;
		turn ruparm to x-axis <-11.192308> now;
		turn luparm to x-axis <11.192308> now;
		turn lgun to x-axis <36.791209> speed <200.000000> * SPEEDUP_FACTOR / 100;
		turn rleg to x-axis <39.390110> now;
		turn lleg to x-axis <41.791209> now;
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		turn torso to y-axis <3.890110> now;
		turn ruparm to x-axis <-13.390110> now;
		turn luparm to x-axis <12.291209> now;
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.500000] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <-29.500000> now;
		turn rthigh to x-axis <8.791209> now;
		turn torso to y-axis <3.192308> now;
		turn ruparm to x-axis <-8.093407> now;
		turn luparm to x-axis <6.291209> now;
		turn rleg to x-axis <51.692308> now;
		turn lleg to x-axis <28.500000> now;
		sleep 100 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <-16.192308> now;
		turn rthigh to x-axis <0.000000> now;
		turn torso to y-axis <1.390110> now;
		turn ruparm to x-axis <-3.192308> now;
		turn luparm to x-axis <0.000000> now;
		turn rleg to x-axis <58.000000> now;
		turn lleg to x-axis <16.192308> now;
		sleep 90 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.500000> now;
		turn lthigh to x-axis <7.000000> now;
		turn rthigh to x-axis <-6.291209> now;
		turn torso to y-axis <0.000000> now;
		turn ruparm to x-axis <3.192308> now;
		turn luparm to x-axis <-6.291209> now;
		turn rleg to x-axis <44.291209> now;
		turn lleg to x-axis <5.593407> now;
		sleep 90 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <10.890110> now;
		turn rthigh to x-axis <-34.500000> now;
		turn torso to y-axis <-1.390110> now;
		turn ruparm to x-axis <6.692308> now;
		turn luparm to x-axis <-8.093407> now;
		turn rleg to x-axis <71.390110> now;
		turn lleg to x-axis <20.000000> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn lthigh to x-axis <13.000000> now;
		turn rthigh to x-axis <-42.890110> now;
		turn torso to y-axis <-2.500000> now;
		turn ruparm to x-axis <8.390110> now;
		turn luparm to x-axis <-9.093407> now;
		turn rleg to x-axis <54.500000> now;
		sleep 70 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.000000] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <16.890110> now;
		turn rthigh to x-axis <-48.192308> now;
		turn torso to y-axis <-3.192308> now;
		turn ruparm to x-axis <10.192308> now;
		turn luparm to x-axis <-10.192308> now;
		turn rleg to x-axis <34.500000> now;
		turn lleg to x-axis <20.000000> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.750000] now;
		turn pelvis to x-axis <6.692308> now;
		turn lthigh to x-axis <15.500000> now;
		turn rthigh to x-axis <-40.390110> now;
		turn torso to y-axis <-4.192308> now;
		turn ruparm to x-axis <11.192308> now;
		turn luparm to x-axis <-11.192308> now;
		turn rleg to x-axis <40.390110> now;
		turn lleg to x-axis <30.593407> now;
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		turn ruparm to x-axis <13.390110> now;
		turn luparm to x-axis <-12.291209> now;
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.500000] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <9.500000> now;
		turn rthigh to x-axis <-34.500000> now;
		turn torso to y-axis <-3.192308> now;
		turn ruparm to x-axis <8.390110> now;
		turn luparm to x-axis <-8.390110> now;
		turn lleg to x-axis <43.890110> now;
		sleep 100 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <0.692308> now;
		turn rthigh to x-axis <-26.390110> now;
		turn torso to y-axis <-1.791209> now;
		turn ruparm to x-axis <3.192308> now;
		turn luparm to x-axis <-3.192308> now;
		turn lleg to x-axis <54.500000> now;
		sleep 90 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.500000> now;
		turn lthigh to x-axis <-16.890110> now;
		turn rthigh to x-axis <3.890110> now;
		turn torso to y-axis <0.000000> now;
		turn ruparm to x-axis <-3.192308> now;
		turn luparm to x-axis <3.890110> now;
		turn rleg to x-axis <8.093407> now;
		turn lleg to x-axis <60.500000> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <-29.500000> now;
		turn rthigh to x-axis <10.192308> now;
		turn torso to y-axis <1.791209> now;
		turn ruparm to x-axis <-6.692308> now;
		turn luparm to x-axis <8.791209> now;
		turn rleg to x-axis <26.000000> now;
		turn lleg to x-axis <56.291209> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn lthigh to x-axis <-43.890110> now;
		turn rthigh to x-axis <12.291209> now;
		turn torso to y-axis <2.500000> now;
		turn ruparm to x-axis <-7.000000> now;
		turn luparm to x-axis <9.791209> now;
		turn lleg to x-axis <55.890110> now;
		sleep 70 * 100 / SPEEDUP_FACTOR;
	}
	move pelvis to y-axis [-1.000000] now;
	turn pelvis to x-axis <5.291209> now;
	turn lthigh to x-axis <-43.890110> now;
	turn rthigh to x-axis <14.390110> now;
	turn torso to y-axis <3.192308> now;
	turn ruparm to x-axis <-8.791209> now;
	turn luparm to x-axis <10.192308> now;
	turn lleg to x-axis <25.692308> now;
	sleep 80 * 100 / SPEEDUP_FACTOR;
	return;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [-1.750000] now;
		move head to y-axis [0.000000] now;
		turn pelvis to x-axis <6.692308> now;
		turn lthigh to x-axis <-41.791209> now;
		turn rthigh to x-axis <17.593407> now;
		turn rleg to x-axis <39.390110> now;
		turn lleg to x-axis <41.791209> now;
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.500000] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <-29.500000> now;
		turn rthigh to x-axis <8.791209> now;
		turn rleg to x-axis <51.692308> now;
		turn lleg to x-axis <28.500000> now;
		sleep 100 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <-16.192308> now;
		turn rthigh to x-axis <0.000000> now;
		turn rleg to x-axis <58.000000> now;
		turn lleg to x-axis <16.192308> now;
		sleep 90 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.500000> now;
		turn lthigh to x-axis <7.000000> now;
		turn rthigh to x-axis <-6.291209> now;
		turn rleg to x-axis <44.291209> now;
		turn lleg to x-axis <5.593407> now;
		sleep 90 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <10.890110> now;
		turn rthigh to x-axis <-34.500000> now;
		turn rleg to x-axis <71.390110> now;
		turn lleg to x-axis <20.000000> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn lthigh to x-axis <13.000000> now;
		turn rthigh to x-axis <-42.890110> now;
		turn rleg to x-axis <54.500000> now;
		sleep 70 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.000000] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <16.890110> now;
		turn rthigh to x-axis <-48.192308> now;
		turn rleg to x-axis <34.500000> now;
		turn lleg to x-axis <20.000000> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.750000] now;
		turn pelvis to x-axis <6.692308> now;
		turn lthigh to x-axis <15.500000> now;
		turn rthigh to x-axis <-40.390110> now;
		turn rleg to x-axis <40.390110> now;
		turn lleg to x-axis <30.593407> now;
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.500000] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <9.500000> now;
		turn rthigh to x-axis <-34.500000> now;
		turn lleg to x-axis <43.890110> now;
		sleep 100 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <0.692308> now;
		turn rthigh to x-axis <-26.390110> now;
		turn lleg to x-axis <54.500000> now;
		sleep 90 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.500000> now;
		turn lthigh to x-axis <-16.890110> now;
		turn rthigh to x-axis <3.890110> now;
		turn rleg to x-axis <8.093407> now;
		turn lleg to x-axis <60.500000> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <-29.500000> now;
		turn rthigh to x-axis <10.192308> now;
		turn rleg to x-axis <26.000000> now;
		turn lleg to x-axis <56.291209> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn lthigh to x-axis <-43.890110> now;
		turn rthigh to x-axis <12.291209> now;
		turn lleg to x-axis <55.890110> now;
		sleep 70 * 100 / SPEEDUP_FACTOR;
	}
	move pelvis to y-axis [-1.000000] now;
	turn pelvis to x-axis <5.291209> now;
	turn lthigh to x-axis <-43.890110> now;
	turn rthigh to x-axis <14.390110> now;
	turn lleg to x-axis <25.692308> now;
	sleep 80 * 100 / SPEEDUP_FACTOR;
	return;
}

MotionControl()
{
	var moving, aiming, justMoved;
	justMoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			justMoved = TRUE;
			if( aiming )
			{
				call-script walklegs();
			}
			if( !aiming )
			{
				call-script walk();
			}
			
		}
		if( !moving )
		{
			if( justMoved )
			{
				turn pelvis to x-axis <0.000000> speed <200.000000>;
				move pelvis to y-axis [0.000000] speed [5.500000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				justMoved = FALSE;
			}
			sleep 100;
		}
	}
	return;
}

Create()
{
	//hide rflare;
	//hide lflare;
	//hide nanospray;
	//hide torpedo;
	hide rtorpgun;
	bMoving = FALSE;
	bBuilding = FALSE;
	bDgunning = FALSE;
	bUnderwater = FALSE;
	canAim1 = TRUE;
	canAim2 = FALSE;
	bAiming = FALSE;
	stanceActivated = [0];
	firept2 = [0];
	firept3 = [0];
	nanopt1 = [0];
	start-script MotionControl();
	start-script Build();
	start-script checkUnderwater();
	return;
}

StartMoving()
{
	bMoving = TRUE;
	return;
}

StopMoving()
{
	bMoving = FALSE;
	return;
}

SweetSpot(piecenum)
{
	piecenum = torso;
	return;
}

QueryNanoPiece(piecenum)
{
	if(nanopt1 == [0])
	{
		piecenum = lnanospray;
		nanopt1 = [1];
		return;
	}
	if(nanopt1 == [1])
	{
		piecenum = rnanospray;
		nanopt1 = [0];
		return;
	}
}

RestorePosition()
{
	bDgunning = 0;
	sleep RESTORE_DELAY;
	turn torso to y-axis <0.000000> speed <290.000000>;
	turn ruparm to x-axis <0.000000> speed <245.000000>;
	turn luparm to x-axis <0.000000> speed <245.000000>;
	turn rgun to x-axis <0.000000> speed <100.000000> * SPEEDUP_FACTOR / 100;
	turn lgun to x-axis <0.000000> speed <100.000000> * SPEEDUP_FACTOR / 100;
	turn larm to y-axis <0.000000> speed <300.000000>;
	turn rarm to y-axis <0.000000> speed <300.000000>;
	wait-for-turn larm around y-axis;
	wait-for-turn rarm around y-axis;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn rgun around x-axis;
	wait-for-turn lgun around x-axis;
	bAiming = FALSE;
	return;
}



AimFromPrimary(piecenum)
{
	piecenum = torso;
	return;
}

QueryPrimary(piecenum)
{
	piecenum = rflare1;
}

AimPrimary(heading, pitch)
{
	if( bDgunning || bBuilding || !canAim1)
	{
		sleep 100;
		return (0);
	}
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;

	turn torso to y-axis heading speed <300.093407>;
	turn ruparm to x-axis <0.000000> - pitch speed <245.000000>;
	turn rgun to x-axis <0.000000> speed <245.000000>;
	turn rarm to y-axis <0.000000> speed <300.000000>;
	wait-for-turn rarm around y-axis;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn rgun around x-axis;
	start-script RestorePosition();
	return (1);
}

FirePrimary()
{
	move rg1 to z-axis [-5.000000] now;
	emit-sfx 1024 + 0 from rflare1;
	sleep 150;
	move rg1 to z-axis <0.000000> speed [5.000000];
	return;

}


AimFromSecondary(piecenum)
{
	piecenum = torso;
	return;
}

QuerySecondary(piecenum)
{
	piecenum = rtorpflare;
}

AimSecondary(heading, pitch)
{
	if( bDgunning || bBuilding || !canAim2)
	{
		sleep 100;
		return (0);
	}
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;

	turn torso to y-axis heading speed <300.093407>;
	turn ruparm to x-axis <0.000000> - pitch speed <245.000000>;
	turn rgun to x-axis <0.000000> speed <245.000000>;
	turn rarm to y-axis <0.000000> speed <300.000000>;
	wait-for-turn rarm around y-axis;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn rgun around x-axis;
	start-script RestorePosition();
	return (1);
}

FireSecondary()
{
	return (0);
}

AimFromTertiary(piecenum)
{
	piecenum = torso;
	return;
}

QueryTertiary(piecenum)
{
	piecenum = emit3;
	return;
	//if(firept3 == [0])
	//{
		//piecenum = lflare1;
		//firept3 = [1];
		//return;
	//}
	//if(firept3 == [1])
	//{
		//piecenum = rflare1;
		//firept3 = [0];
		//return;
	//}
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	bDgunning = TRUE;

	turn torso to y-axis heading speed <300.093407>;
	turn ruparm to x-axis <0.000000> - pitch speed <245.000000>;
	turn luparm to x-axis <0.000000> - pitch speed <245.000000>;
	turn rgun to x-axis <0.000000> speed <310.000000>;
	turn lgun to x-axis <0.000000> speed <310.000000>;
	turn larm to y-axis <0.000000> speed <300.000000>;
	turn rarm to y-axis <0.000000> speed <300.000000>;
	wait-for-turn larm around y-axis;
	wait-for-turn rarm around y-axis;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn rgun around x-axis;
	wait-for-turn lgun around x-axis;
	start-script RestorePosition();

	return (1);
}

Shot3(zero)
{
	//if( firept3==[0])
	//{
		//emit-sfx 1024 + 2 from lflare1;
		//return;
	//}
	//if( firept3==[1])
	//{
		emit-sfx 1024 + 2 from rflare1;
		return;
	//}
}

StartBuilding(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bBuilding = TRUE;
	bAiming = TRUE;
	turn torso to y-axis heading speed <300.093407>;
	turn luparm to x-axis <0.000000> - pitch speed <350.000000>;
	turn lgun to x-axis <0.000000> speed <395.000000>;

	//turn larm to y-axis <30.000000> speed <300.000000>;

	//wait-for-turn larm around y-axis;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn lgun around x-axis;
	set INBUILDSTANCE to 1;
	return;
}


StopBuilding()
{
	set INBUILDSTANCE to 0;
	bBuilding = FALSE;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	start-script RestorePosition();
	return;
}

Killed(Func_Var_1, Func_Var_2)
{
	play-sound( "VICTORY2", 60 );
	sleep 1;
	play-sound( "VICTORY2", 60 );
	return;
}
