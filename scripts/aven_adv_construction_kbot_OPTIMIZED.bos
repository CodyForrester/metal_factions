#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 200

piece  rnanospray, lnanospray, torso, pelvis, lleg, lfoot, rleg, rfoot,
       rthigh, lthigh, guncase, nanojoint, nanoarm, lnanogun, rnanogun, ground;

static-var  Static_Var_1, bMoving, Static_Var_3, Static_Var_4, spray,
            statechg_DesiredState, statechg_StateChanging, Static_Var_8;


Build()
{
	if( Static_Var_8 == 1 )
	{
		emit-sfx 1024 + 0 from rnanospray;
		emit-sfx 1024 + 0 from lnanospray;
		sleep 60;
	}
	sleep 40;
	start-script Build();
	return (0);
}

walk()
{
	if( TRUE )
	{
		move pelvis to y-axis [3.000000] now;
		move lleg to y-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move rleg to y-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		turn torso to z-axis <8.082418> now;
		turn rthigh to x-axis <49.934066> now;
		turn lthigh to x-axis <-36.571429> now;
		turn lleg to x-axis <43.247253> now;
		turn lfoot to x-axis <-6.324176> now;
		turn rfoot to x-axis <-18.637363> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.750000] now;
		turn torso to z-axis <5.978022> now;
		turn rthigh to x-axis <31.648352> now;
		turn lthigh to x-axis <-29.181319> now;
		turn lleg to x-axis <38.681319> now;
		turn lfoot to x-axis <-10.192308> now;
		turn rleg to x-axis <-18.637363> now;
		turn rfoot to x-axis <10.549451> now;
		sleep 40;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.250000] now;
		turn torso to z-axis <4.214286> now;
		turn rthigh to x-axis <19.335165> now;
		turn lthigh to x-axis <-22.148352> now;
		turn lleg to x-axis <32.346154> now;
		turn rleg to x-axis <-31.291209> now;
		turn rfoot to x-axis <30.236264> now;
		sleep 35;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.000000] now;
		turn torso to z-axis <2.104396> now;
		turn rthigh to x-axis <9.137363> now;
		turn lthigh to x-axis <-8.791209> now;
		turn lleg to x-axis <34.813187> now;
		turn lfoot to x-axis <-24.615385> now;
		turn rleg to x-axis <-31.648352> now;
		turn rfoot to x-axis <40.082418> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.875000] now;
		turn torso to z-axis <0.000000> now;
		turn rthigh to x-axis <-7.379121> now;
		turn lthigh to x-axis <-6.681319> now;
		turn lleg to x-axis <45.714286> now;
		turn lfoot to x-axis <-39.027473> now;
		turn rleg to x-axis <-31.291209> now;
		turn rfoot to x-axis <47.115385> now;
		sleep 55;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.125000] now;
		turn torso to z-axis <-2.104396> now;
		turn rthigh to x-axis <-17.225275> now;
		turn lthigh to x-axis <4.560440> now;
		turn rfoot to x-axis <57.313187> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.250000] now;
		turn torso to z-axis <-3.868132> now;
		turn rthigh to x-axis <-24.615385> now;
		turn lthigh to x-axis <12.659341> now;
		turn lfoot to x-axis <-42.192308> now;
		turn rleg to x-axis <-21.093407> now;
		turn rfoot to x-axis <62.236264> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.750000] now;
		turn torso to z-axis <-5.967033> now;
		turn rthigh to x-axis <-37.269231> now;
		turn lthigh to x-axis <33.049451> now;
		turn lleg to x-axis <33.758242> now;
		turn rleg to x-axis <0.703297> now;
		turn rfoot to x-axis <51.681319> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [3.000000] now;
		turn torso to z-axis <-8.082418> now;
		turn rthigh to x-axis <-40.791209> now;
		turn lthigh to x-axis <47.467033> now;
		turn lleg to x-axis <19.335165> now;
		turn lfoot to x-axis <-41.137363> now;
		turn rleg to x-axis <36.912088> now;
		turn rfoot to x-axis <3.868132> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.750000] now;
		turn torso to z-axis <-5.967033> now;
		turn rthigh to x-axis <-29.181319> now;
		turn lthigh to x-axis <35.868132> now;
		turn lleg to x-axis <4.571429> now;
		turn lfoot to x-axis <-19.692308> now;
		turn rfoot to x-axis <-7.736264> now;
		sleep 40;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.250000] now;
		turn torso to z-axis <-4.214286> now;
		turn rthigh to x-axis <-18.637363> now;
		turn lthigh to x-axis <16.527473> now;
		turn lleg to x-axis <-15.467033> now;
		turn lfoot to x-axis <13.357143> now;
		turn rleg to x-axis <33.401099> now;
		turn rfoot to x-axis <-14.769231> now;
		sleep 35;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.125000] now;
		turn torso to z-axis <-2.104396> now;
		turn rthigh to x-axis <-10.549451> now;
		turn lthigh to x-axis <4.560440> now;
		turn lleg to x-axis <-23.549451> now;
		turn lfoot to x-axis <36.214286> now;
		turn rfoot to x-axis <-24.258242> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.875000] now;
		turn torso to z-axis <0.000000> now;
		turn rthigh to x-axis <-1.401099> now;
		turn lthigh to x-axis <-4.923077> now;
		turn lleg to x-axis <-37.978022> now;
		turn lfoot to x-axis <66.456044> now;
		turn rleg to x-axis <36.912088> now;
		turn rfoot to x-axis <-34.456044> now;
		sleep 55;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.125000] now;
		turn torso to z-axis <2.104396> now;
		turn rthigh to x-axis <13.703297> now;
		turn lthigh to x-axis <-23.560440> now;
		turn lleg to x-axis <-14.060440> now;
		turn lfoot to x-axis <56.258242> now;
		turn rleg to x-axis <26.016484> now;
		turn rfoot to x-axis <-27.780220> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.250000] now;
		turn torso to z-axis <4.214286> now;
		turn rthigh to x-axis <22.148352> now;
		turn lthigh to x-axis <-29.181319> now;
		turn lleg to x-axis <-7.379121> now;
		turn lfoot to x-axis <53.093407> now;
		turn rleg to x-axis <17.923077> now;
		turn rfoot to x-axis <-21.445055> now;
		sleep 30;
	}
	move pelvis to y-axis [2.750000] now;
	turn torso to z-axis <5.978022> now;
	turn rthigh to x-axis <36.912088> now;
	turn lthigh to x-axis <-33.758242> now;
	turn lleg to x-axis <6.681319> now;
	turn lfoot to x-axis <42.901099> now;
	turn rleg to x-axis <8.082418> now;
	turn rfoot to x-axis <-13.714286> now;
	sleep 30;
	return (0);
}

walklegs()
{
	if( TRUE )
	{
		move pelvis to y-axis [3.000000] now;
		move lleg to y-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move rleg to y-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		turn rthigh to x-axis <49.934066> now;
		turn lthigh to x-axis <-36.571429> now;
		turn lleg to x-axis <43.247253> now;
		turn lfoot to x-axis <-6.324176> now;
		turn rfoot to x-axis <-18.637363> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.750000] now;
		turn rthigh to x-axis <31.648352> now;
		turn lthigh to x-axis <-29.181319> now;
		turn lleg to x-axis <38.681319> now;
		turn lfoot to x-axis <-10.192308> now;
		turn rleg to x-axis <-18.637363> now;
		turn rfoot to x-axis <10.549451> now;
		sleep 40;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.250000] now;
		turn rthigh to x-axis <19.335165> now;
		turn lthigh to x-axis <-22.148352> now;
		turn lleg to x-axis <32.346154> now;
		turn rleg to x-axis <-31.291209> now;
		turn rfoot to x-axis <30.236264> now;
		sleep 35;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.000000] now;
		turn rthigh to x-axis <9.137363> now;
		turn lthigh to x-axis <-8.791209> now;
		turn lleg to x-axis <34.813187> now;
		turn lfoot to x-axis <-24.615385> now;
		turn rleg to x-axis <-31.648352> now;
		turn rfoot to x-axis <40.082418> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.875000] now;
		turn rthigh to x-axis <-7.379121> now;
		turn lthigh to x-axis <-6.681319> now;
		turn lleg to x-axis <45.714286> now;
		turn lfoot to x-axis <-39.027473> now;
		turn rleg to x-axis <-31.291209> now;
		turn rfoot to x-axis <47.115385> now;
		sleep 55;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.125000] now;
		turn rthigh to x-axis <-17.225275> now;
		turn lthigh to x-axis <4.560440> now;
		turn rfoot to x-axis <57.313187> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.250000] now;
		turn rthigh to x-axis <-24.615385> now;
		turn lthigh to x-axis <12.659341> now;
		turn lfoot to x-axis <-42.192308> now;
		turn rleg to x-axis <-21.093407> now;
		turn rfoot to x-axis <62.236264> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.750000] now;
		turn rthigh to x-axis <-37.269231> now;
		turn lthigh to x-axis <33.049451> now;
		turn lleg to x-axis <33.758242> now;
		turn rleg to x-axis <0.703297> now;
		turn rfoot to x-axis <51.681319> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [3.000000] now;
		turn rthigh to x-axis <-40.791209> now;
		turn lthigh to x-axis <47.467033> now;
		turn lleg to x-axis <19.335165> now;
		turn lfoot to x-axis <-41.137363> now;
		turn rleg to x-axis <36.912088> now;
		turn rfoot to x-axis <3.868132> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.750000] now;
		turn rthigh to x-axis <-29.181319> now;
		turn lthigh to x-axis <35.868132> now;
		turn lleg to x-axis <4.571429> now;
		turn lfoot to x-axis <-19.692308> now;
		turn rfoot to x-axis <-7.736264> now;
		sleep 40;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.250000] now;
		turn rthigh to x-axis <-18.637363> now;
		turn lthigh to x-axis <16.527473> now;
		turn lleg to x-axis <-15.467033> now;
		turn lfoot to x-axis <13.357143> now;
		turn rleg to x-axis <33.401099> now;
		turn rfoot to x-axis <-14.769231> now;
		sleep 35;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.125000] now;
		turn rthigh to x-axis <-10.549451> now;
		turn lthigh to x-axis <4.560440> now;
		turn lleg to x-axis <-23.549451> now;
		turn lfoot to x-axis <36.214286> now;
		turn rfoot to x-axis <-24.258242> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.875000] now;
		turn rthigh to x-axis <-1.401099> now;
		turn lthigh to x-axis <-4.923077> now;
		turn lleg to x-axis <-37.978022> now;
		turn lfoot to x-axis <66.456044> now;
		turn rleg to x-axis <36.912088> now;
		turn rfoot to x-axis <-34.456044> now;
		sleep 55;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.125000] now;
		turn rthigh to x-axis <13.703297> now;
		turn lthigh to x-axis <-23.560440> now;
		turn lleg to x-axis <-14.060440> now;
		turn lfoot to x-axis <56.258242> now;
		turn rleg to x-axis <26.016484> now;
		turn rfoot to x-axis <-27.780220> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [2.250000] now;
		turn rthigh to x-axis <22.148352> now;
		turn lthigh to x-axis <-29.181319> now;
		turn lleg to x-axis <-7.379121> now;
		turn lfoot to x-axis <53.093407> now;
		turn rleg to x-axis <17.923077> now;
		turn rfoot to x-axis <-21.445055> now;
		sleep 30;
	}
	move pelvis to y-axis [2.750000] now;
	turn rthigh to x-axis <36.912088> now;
	turn lthigh to x-axis <-33.758242> now;
	turn lleg to x-axis <6.681319> now;
	turn lfoot to x-axis <42.901099> now;
	turn rleg to x-axis <8.082418> now;
	turn rfoot to x-axis <-13.714286> now;
	sleep 30;
	return (0);
}

stand()
{
	move lleg to y-axis [0.000000] now;
	move lfoot to z-axis [0.000000] now;
	move rleg to y-axis [0.000000] now;
	move rfoot to z-axis [0.000000] now;
	sleep 200;
	return (0);
}

open()
{
	if( TRUE )
	{
		move lleg to y-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move rleg to y-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		turn guncase to x-axis <0.000000> now;
		turn guncase to x-axis <-68.115385> speed <180.000000>;
		turn nanojoint to x-axis <0.000000> now;
		turn nanojoint to x-axis <-4.214286> speed <16.000000>;
		sleep 150;
	}
	if( TRUE )
	{
		turn nanoarm to x-axis <-52.747253> speed <210.000000>;
		turn nanojoint to x-axis <43.945055> speed <210.000000>;
		sleep 150;
	}
	if( TRUE )
	{
		turn nanoarm to x-axis <-87.560440> speed <140.000000>;
		turn nanojoint to x-axis <157.538462> speed <250.000000>;
		sleep 150;
	}
	sleep 30;
	return (0);
}

close()
{
	if( TRUE )
	{
		move lleg to y-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move rleg to y-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		turn guncase to x-axis <-68.115385> now;
		turn nanoarm to x-axis <-87.560440> now;
		turn nanoarm to x-axis <0.000000> speed <300.000000>;
		turn nanojoint to x-axis <157.000000> now;
		turn nanojoint to x-axis <0.000000> speed <300.000000>;
		sleep 150;
	}
	if( TRUE )
	{
		turn guncase to x-axis <0.093407> speed <270.000000>;
		sleep 150;
	}
	sleep 40;
	return (0);
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 2 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from lnanogun;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from rnanogun;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

MotionControl(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		Func_Var_2 = Static_Var_3;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				Static_Var_4 = 1;
				call-script walklegs();
			}
			if( !Func_Var_2 )
			{
				Static_Var_4 = 0;
				call-script walk();
			}
		}
		if( !Func_Var_1 )
		{
			Static_Var_4 = 1;
			call-script stand();
		}
	}
	return (0);
}

Go()
{
	Static_Var_3 = 1;
	call-script open();
	turn torso to y-axis Static_Var_1 speed <250.000000>;
	wait-for-turn torso around y-axis;
	set INBUILDSTANCE to 1;
	return (0);
}

Stop()
{
	set INBUILDSTANCE to 0;
	turn torso to y-axis <0.000000> speed <250.000000>;
	wait-for-turn torso around y-axis;
	call-script close();
	Static_Var_3 = 0;
	return (0);
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	return (0);
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
	return (0);
}

Create()
{
	bMoving = FALSE;
	Static_Var_3 = 0;
	Static_Var_4 = 1;
	spray = rnanospray;
	Static_Var_1 = 0;
	call-script InitState();
	start-script SmokeUnit();
	start-script MotionControl();
	start-script Build();
	return (0);
}

Activate()
{
	start-script RequestState(0);
	return (0);
}

Deactivate()
{
	start-script RequestState(1);
	return (0);
}

StartBuilding(Func_Var_1)
{
	Static_Var_1 = Func_Var_1;
	start-script RequestState(0);
	Static_Var_8 = 1;
	return (0);
}

StopBuilding()
{
	start-script RequestState(1);
	Static_Var_8 = 0;
	return (0);
}

StartMoving()
{
	bMoving = TRUE;
	return (0);
}

StopMoving()
{
	bMoving = FALSE;
	return (0);
}

QueryNanoPiece(piecenum)
{
	piecenum = spray;
	spray = !spray;
	return (0);
}

TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = torso;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type BITMAPONLY | BITMAP1;
		explode guncase type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP3;
		explode lleg type BITMAPONLY | BITMAP4;
		explode lnanogun type BITMAPONLY | BITMAP5;
		explode lnanospray type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode nanoarm type BITMAPONLY | BITMAP3;
		explode nanojoint type BITMAPONLY | BITMAP4;
		explode pelvis type BITMAPONLY | BITMAP5;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode rleg type BITMAPONLY | BITMAP2;
		explode rnanogun type BITMAPONLY | BITMAP3;
		explode rnanospray type BITMAPONLY | BITMAP4;
		explode rthigh type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type BITMAPONLY | BITMAP1;
		explode guncase type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP3;
		explode lleg type FALL | BITMAP4;
		explode lnanogun type BITMAPONLY | BITMAP5;
		explode lnanospray type FALL | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode nanoarm type BITMAPONLY | BITMAP3;
		explode nanojoint type SHATTER | BITMAP4;
		explode pelvis type BITMAPONLY | BITMAP5;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode rleg type FALL | BITMAP2;
		explode rnanogun type BITMAPONLY | BITMAP3;
		explode rnanospray type FALL | BITMAP4;
		explode rthigh type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type BITMAPONLY | BITMAP1;
		explode guncase type BITMAPONLY | BITMAP2;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lnanogun type BITMAPONLY | BITMAP5;
		explode lnanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode nanoarm type SHATTER | BITMAP3;
		explode nanojoint type SHATTER | BITMAP4;
		explode pelvis type BITMAPONLY | BITMAP5;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rnanogun type BITMAPONLY | BITMAP3;
		explode rnanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode ground type BITMAPONLY | BITMAP1;
	explode guncase type BITMAPONLY | BITMAP2;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lnanogun type BITMAPONLY | BITMAP5;
	explode lnanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode nanoarm type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode nanojoint type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode pelvis type BITMAPONLY | BITMAP5;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rnanogun type BITMAPONLY | BITMAP3;
	explode rnanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode torso type BITMAPONLY | BITMAP1;
	return (0);
}
