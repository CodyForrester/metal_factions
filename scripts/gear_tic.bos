#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 200

piece  base, body, top, leg1, leg2, leg3, leg4, leg5,
       leg6;

static-var  bMoving, justMoved;


walk2()
{
	while( bMoving )
	{
		if( bMoving )
		{
			turn leg1 to y-axis <43.796703> now;
			turn leg1 to y-axis <0.000000> speed <219.000000> * SPEEDUP_FACTOR / 100;
			turn leg1 to z-axis <0.598901> now;
			turn leg1 to z-axis <0.000000> speed <3.000000> * SPEEDUP_FACTOR / 100;
			turn leg2 to z-axis <0.000000> now;
			turn leg2 to z-axis <31.000000> speed <155.098901> * SPEEDUP_FACTOR / 100;
			turn leg3 to y-axis <34.697802> now;
			turn leg3 to y-axis <34.098901> speed <3.000000> * SPEEDUP_FACTOR / 100;
			turn leg3 to z-axis <31.598901> now;
			turn leg3 to z-axis <0.598901> speed <155.098901> * SPEEDUP_FACTOR / 100;
			turn leg4 to y-axis <-40.098901> now;
			turn leg4 to y-axis <-40.098901> speed <0.000000> * SPEEDUP_FACTOR / 100;
			turn leg4 to z-axis <-31.000000> now;
			turn leg4 to z-axis <-0.598901> speed <152.098901> * SPEEDUP_FACTOR / 100;
			turn leg5 to y-axis <-37.098901> now;
			turn leg5 to y-axis <0.000000> speed <185.500000> * SPEEDUP_FACTOR / 100;
			turn leg5 to z-axis <0.000000> now;
			turn leg5 to z-axis <0.000000> speed <0.000000> * SPEEDUP_FACTOR / 100;
			turn leg6 to y-axis <0.000000> now;
			turn leg6 to y-axis <-30.395604> speed <152.098901> * SPEEDUP_FACTOR / 100;
			turn leg6 to z-axis <-45.000000> now;
			sleep 100 * 100 / SPEEDUP_FACTOR;
		}
		if( bMoving )
		{
			turn leg1 to z-axis <31.598901> speed <158.098901> * SPEEDUP_FACTOR / 100;
			turn leg2 to y-axis <34.697802> speed <173.395604> * SPEEDUP_FACTOR / 100;
			turn leg2 to z-axis <31.000000> speed <0.000000> * SPEEDUP_FACTOR / 100;
			turn leg3 to y-axis <0.000000> speed <170.296703> * SPEEDUP_FACTOR / 100;
			turn leg3 to z-axis <0.000000> speed <3.000000> * SPEEDUP_FACTOR / 100;
			turn leg4 to y-axis <0.000000> speed <200.697802> * SPEEDUP_FACTOR / 100;
			turn leg5 to z-axis <-31.000000> speed <155.098901> * SPEEDUP_FACTOR / 100;
			turn leg6 to z-axis <2.395604> speed <237.197802> * SPEEDUP_FACTOR / 100;
			sleep 100 * 100 / SPEEDUP_FACTOR;
		}
		if( bMoving )
		{
			turn leg1 to y-axis <56.000000> speed <279.796703> * SPEEDUP_FACTOR / 100;
			turn leg1 to z-axis <31.000000> speed <3.000000> * SPEEDUP_FACTOR / 100;
			turn leg2 to y-axis <34.697802> speed <0.000000> * SPEEDUP_FACTOR / 100;
			turn leg2 to z-axis <0.598901> speed <152.098901> * SPEEDUP_FACTOR / 100;
			turn leg3 to z-axis <31.598901> speed <158.098901> * SPEEDUP_FACTOR / 100;
			turn leg4 to y-axis <-0.598901> speed <3.000000> * SPEEDUP_FACTOR / 100;
			turn leg4 to z-axis <-31.000000> speed <152.098901> * SPEEDUP_FACTOR / 100;
			turn leg5 to y-axis <-31.598901> speed <158.098901> * SPEEDUP_FACTOR / 100;
			turn leg5 to z-axis <-31.000000> speed <0.000000> * SPEEDUP_FACTOR / 100;
			turn leg6 to y-axis <3.000000> speed <167.296703> * SPEEDUP_FACTOR / 100;
			sleep 100 * 100 / SPEEDUP_FACTOR;
		}
		turn leg1 to y-axis <43.796703> speed <60.796703> * SPEEDUP_FACTOR / 100;
		turn leg1 to z-axis <0.598901> speed <152.098901> * SPEEDUP_FACTOR / 100;
		turn leg2 to y-axis <0.000000> speed <173.395604> * SPEEDUP_FACTOR / 100;
		turn leg2 to z-axis <0.000000> speed <3.000000> * SPEEDUP_FACTOR / 100;
		turn leg3 to y-axis <34.697802> speed <173.395604> * SPEEDUP_FACTOR / 100;
		turn leg3 to z-axis <31.598901> speed <0.000000> * SPEEDUP_FACTOR / 100;
		turn leg4 to y-axis <-40.098901> speed <197.697802> * SPEEDUP_FACTOR / 100;
		turn leg4 to z-axis <-31.000000> speed <0.000000> * SPEEDUP_FACTOR / 100;
		turn leg5 to y-axis <-37.098901> speed <27.395604> * SPEEDUP_FACTOR / 100;
		turn leg5 to z-axis <0.000000> speed <155.098901> * SPEEDUP_FACTOR / 100;
		turn leg6 to y-axis <0.000000> speed <15.197802> * SPEEDUP_FACTOR / 100;
		turn leg6 to z-axis <-45.000000> speed <237.197802> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;
	}
	return (0);
}

stand()
{
	turn leg1 to y-axis <0.000000> speed <60.796703>;
	turn leg1 to z-axis <0.000000> speed <152.098901>;
	turn leg2 to y-axis <0.000000> speed <173.395604>;
	turn leg2 to z-axis <0.000000> speed <3.000000>;
	turn leg3 to y-axis <0.000000> speed <173.395604>;
	turn leg3 to z-axis <0.000000> speed <10.000000>;
	turn leg4 to y-axis <0.000000> speed <197.697802>;
	turn leg4 to z-axis <0.000000> speed <10.000000>;
	turn leg5 to y-axis <0.000000> speed <27.395604>;
	turn leg5 to z-axis <0.000000> speed <155.098901>;
	turn leg6 to y-axis <0.000000> speed <15.197802>;
	turn leg6 to z-axis <0.000000> speed <237.197802>;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script walk2();
		}
		if(justMoved)
		{
			call-script stand();		
			justMoved = FALSE;
		}
		if( !Func_Var_1 )
		{
			sleep 100;
		}
	}
	return (0);
}

Create()
{
	bMoving = FALSE;
	justMoved = FALSE;
	start-script MotionControl();
	start-script SmokeUnit();
	return (0);
}

StartMoving()
{
	bMoving = TRUE;
	spin top around y-axis speed <200.000000>;
	return (0);
}

StopMoving()
{
	bMoving = FALSE;
	justMoved = TRUE;
	spin top around y-axis speed <0.000000>;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP3;
		explode leg1 type BITMAPONLY | BITMAP1;
		explode leg2 type BITMAPONLY | BITMAP2;
		explode leg3 type BITMAPONLY | BITMAP3;
		explode leg4 type BITMAPONLY | BITMAP4;
		explode leg5 type BITMAPONLY | BITMAP5;
		explode leg6 type BITMAPONLY | BITMAP1;
		explode top type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP3;
		explode leg1 type FALL | BITMAP1;
		explode leg2 type FALL | BITMAP2;
		explode leg3 type FALL | BITMAP3;
		explode leg4 type FALL | BITMAP4;
		explode leg5 type FALL | BITMAP5;
		explode leg6 type FALL | BITMAP1;
		explode top type SHATTER | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type BITMAPONLY | BITMAP3;
		explode leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode leg5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode leg6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode top type SHATTER | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode body type BITMAPONLY | BITMAP3;
	explode leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode leg5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode leg6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode top type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	return (0);
}
